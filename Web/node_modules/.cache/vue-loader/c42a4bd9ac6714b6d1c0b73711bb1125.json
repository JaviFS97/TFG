{"remainingRequest":"/home/javi/Escritorio/TFG - Web/tfg-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/javi/Escritorio/TFG - Web/tfg-web/src/views/users/RegisterPersonal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/javi/Escritorio/TFG - Web/tfg-web/src/views/users/RegisterPersonal.vue","mtime":1570730669985},{"path":"/home/javi/Escritorio/TFG - Web/tfg-web/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/javi/Escritorio/TFG - Web/tfg-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/javi/Escritorio/TFG - Web/tfg-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n//import {required, email, minLength, maxLength, sameAs} from 'vuelidate/lib/validators'\nimport countries from '../../data/countries.js'\nexport default {\n\n    data() {\n        return {\n            countriesNames: [],\n            personalForm: {\n\n            },\n        }\n    },\n\n    created() {\n        for (let country of countries){\n            this.countriesNames.push( country.name );\n        }\n    },\n\n    methods: {\n        beforeView() {\n            this.$emit('beforeViewChield');\n        }\n    },\n\n\n\n\n}\n",{"version":3,"sources":["RegisterPersonal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA","file":"RegisterPersonal.vue","sourceRoot":"src/views/users","sourcesContent":["<template>\n    <v-row justify=\"center\">\n        <v-card class=\"form-card\" flat>\n                            \n            <v-app-bar color=\"primary\" dark>\n                <v-row justify=\"center\">\n                    <h1>Personal info</h1> \n                </v-row>\n            </v-app-bar>                    \n\n            <v-card-text>\n                <v-text-field label=\"Nick\" outlined prepend-inner-icon=\"mdi-pound\"></v-text-field>\n                <v-text-field label=\"Name\" outlined prepend-inner-icon=\"mdi-format-text\"></v-text-field>\n                <v-text-field label=\"Last Name\" outlined prepend-inner-icon=\"mdi-format-text\"></v-text-field>\n                <v-select label=\"Country\" :items=\"countriesNames\" prepend-inner-icon=\"mdi-map-marker-outline\" dense outlined></v-select>\n\n            </v-card-text>\n\n            <v-card-actions>            \n                <v-row justify=\"center\">\n                    <v-btn @click=\"beforeView()\" color=\"secondary\" class=\"ma-4 form-btn\" >\n                        BEFORE \n                    </v-btn>                        \n                    <v-btn @click=\"nextView()\" color=\"secondary\" class=\"ma-4 form-btn\" >\n                        Register\n                    </v-btn>      \n                </v-row>                                    \n            </v-card-actions>\n\n        </v-card>\n    </v-row>\n  \n</template>\n\n\n<script>\n    //import {required, email, minLength, maxLength, sameAs} from 'vuelidate/lib/validators'\n    import countries from '../../data/countries.js'\n    export default {\n\n        data() {\n            return {\n                countriesNames: [],\n                personalForm: {\n\n                },\n            }\n        },\n\n        created() {\n            for (let country of countries){\n                this.countriesNames.push( country.name );\n            }\n        },\n\n        methods: {\n            beforeView() {\n                this.$emit('beforeViewChield');\n            }\n        },\n\n\n\n\n    }\n</script>\n\n\n<style>\n    .form-btn{\n        width: 25%;\n        max-width: 150px;\n        min-width: 75px;\n    }\n\n    .form-card{\n        width: 80%;\n        min-width: 250px;\n    }\n</style>\n"]}]}