{"remainingRequest":"/home/javi/Escritorio/TFG/Web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/javi/Escritorio/TFG/Web/src/views/users/register/RegisterPersonal.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/javi/Escritorio/TFG/Web/src/views/users/register/RegisterPersonal.vue","mtime":1571590821859},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.form-btn{\n    width: 25%;\n    max-width: 150px;\n    min-width: 75px;\n}\n\n.form-card{\n    width: 80%;\n    min-width: 250px;\n}\n",{"version":3,"sources":["RegisterPersonal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"RegisterPersonal.vue","sourceRoot":"src/views/users/register","sourcesContent":["<template>\n    <v-row justify=\"center\">\n        <v-card class=\"form-card\" flat>\n                            \n            <v-app-bar color=\"primary\" dark>\n                <v-row justify=\"center\">\n                    <h1>Personal info</h1> \n                </v-row>\n            </v-app-bar>                    \n\n            <v-card-text>\n                <v-text-field label=\"Nick\" \n                    outlined prepend-inner-icon=\"mdi-pound\"\n                    v-model=\"personalForm.nick\"\n                    :error-messages=\"nickError\"\n                    @blur=\"$v.personalForm.nick.$touch()\">\n                </v-text-field>\n                <v-text-field label=\"Name\" \n                    outlined prepend-inner-icon=\"mdi-format-text\"\n                    v-model=\"personalForm.name\"\n                    :error-messages=\"nameError\"\n                    @blur=\"$v.personalForm.name.$touch()\">\n                </v-text-field>\n                <v-text-field label=\"Last Name\" \n                    outlined prepend-inner-icon=\"mdi-format-text\"\n                    v-model=\"personalForm.lastName\"\n                    :error-messages=\"lastNameError\"\n                    @blur=\"$v.personalForm.lastName.$touch()\">\n                </v-text-field>\n                <v-select label=\"Country\" \n                    :items=\"countriesNames\" \n                    @change=\"countrySelected\"\n                    prepend-inner-icon=\"mdi-map-marker-outline\" \n                    dense \n                    outlined\n                    v-model=\"personalForm.country\"\n                    :error-messages=\"countryError\"\n                    @blur=\"$v.personalForm.country.$touch()\"                    \n                    >\n                </v-select>\n\n            </v-card-text>\n\n            <v-card-actions>            \n                <v-row justify=\"center\">\n                    <v-btn @click=\"beforeView()\" color=\"secondary\" class=\"ma-4 form-btn\" >\n                        BEFORE \n                    </v-btn>                        \n                    <v-btn @click=\"registerPersonalUser()\" color=\"secondary\" class=\"ma-4 form-btn\" >\n                        Register\n                    </v-btn>      \n                </v-row>                                    \n            </v-card-actions>\n\n        </v-card>\n    </v-row>\n  \n</template>\n\n\n<script>\n    // Data\n    import countries from '../../../data/countries.js'\n\n    // Vuelidate\n    import {required, maxLength} from 'vuelidate/lib/validators'\n\n    // Personalized validator that check spaces and accents.\n    const accentAndSpacesValidator = (value) => /^(?! )(?!.* {2})[a-zA-ZáéíóúÁÉÍÓÚüÜñÑ ]+$/.test(value)    \n\n    export default {\n\n        data() {\n            return {\n                countriesNames: [],\n                personalForm: {\n                    nick: '',\n                    name: '',\n                    lastName: '',\n                    country: '',\n                },\n            }\n        },\n\n        created() {\n            for (let country of countries){\n                this.countriesNames.push( country.name );\n            }\n        },\n\n        methods: {\n            countrySelected(country){\n                this.country = country.name\n\n            },\n\n            /**\n             * Throw events to parents.\n             */\n            registerPersonalUser() {\n                if (this.$v.personalForm.$invalid){\n                    this.$v.personalForm.$touch()\n                }else {\n                    this.$emit('registerPersonal', this.personalForm);\n                }                \n            },            \n            beforeView() {\n                this.$emit('beforeViewChield');\n            },\n\n        },\n        \n        validations: {\n            personalForm: {\n                nick: {\n                    required,      \n                    maxLength: maxLength(20)    \n                },\n                name: {\n                    required,\n                    accentAndSpacesValidator,\n                    maxLength: maxLength(20)\n                },\n                lastName: {\n                    required,\n                    accentAndSpacesValidator,\n                    maxLength: maxLength(30)\n                },\n                country: {\n                    required,\n                }\n            },\n        },\n\n        computed: {\n            /**\n             * Validations for personalForm fields \n             */  \n            nickError() {\n                let error = []\n                if (!this.$v.personalForm.nick.$dirty){ return error}\n                else {\n                    if (!this.$v.personalForm.nick.required){ error.push(\"Nick required.\")}\n                    if (!this.$v.personalForm.nick.maxLength){ error.push(\"Max length 20.\")}\n                    return error\n                }\n            },\n            nameError() {\n                let error = []\n                if (!this.$v.personalForm.name.$dirty){ return error}\n                else {\n                    if (!this.$v.personalForm.name.required){ error.push(\"Name required.\")}\n                    if (!this.$v.personalForm.name.maxLength){ error.push(\"Max length 20.\")}\n                    if (!this.$v.personalForm.name.accentAndSpacesValidator){ error.push(\"Alphabet characters only.\")}\n                    return error\n                }\n            },\n            lastNameError() {\n                let error = []\n                if (!this.$v.personalForm.lastName.$dirty){ return error}\n                else {\n                    if (!this.$v.personalForm.lastName.required){ error.push(\"Last name required.\")}\n                    if (!this.$v.personalForm.lastName.maxLength){ error.push(\"Max length 20.\")}\n                    if (!this.$v.personalForm.lastName.accentAndSpacesValidator){ error.push(\"Alphabet characters only.\")}\n                    return error\n                }\n            },    \n            countryError() {\n                let error = []\n                if (!this.$v.personalForm.country.$dirty){ return error}\n                else {\n                    if (!this.$v.personalForm.country.required){ error.push(\"Country required.\")}\n\n                    return error\n                }\n            },                      \n        }\n\n\n\n\n\n\n    }\n</script>\n\n\n<style>\n    .form-btn{\n        width: 25%;\n        max-width: 150px;\n        min-width: 75px;\n    }\n\n    .form-card{\n        width: 80%;\n        min-width: 250px;\n    }\n</style>\n"]}]}