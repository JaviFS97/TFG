{"remainingRequest":"/home/javi/Escritorio/TFG/Web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/javi/Escritorio/TFG/Web/src/views/users/actions/actionController.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/javi/Escritorio/TFG/Web/src/views/users/actions/actionController.vue","mtime":1577208877160},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\n// Firebase \nimport { auth } from '@/firebase'\n\n// Vuex\nimport { mapActions } from 'vuex'\n\nexport default {\n    data(){\n        return {\n            oobCode: '',    // A unique code used to identify and verify an application.\n        }\n    },\n\n    created(){\n        // Based on => https://firebase.google.com/docs/auth/custom-email-handler\n        this.validate()\n    },\n    methods: {\n        ...mapActions('snackbar', ['showNotificationSuccess', 'showNotificationError']),\n\n        async validate(){\n\n            let mode = this.$route.query.mode\n            this.oobCode = this.$route.query.oobCode\n\n            switch(mode){\n                case 'verifyEmail':\n\n                    try{\n                        // Validating user.\n                        await auth.applyActionCode(this.oobCode)\n                        await auth.currentUser.reload()\n\n                        this.showNotificationSuccess({msg: 'Activation successful!!', timeout:4000, axisY: 'top', axisX: 'center'})\n                        this.$router.push( {name:'dashboard'} )\n\n                    }catch(error){\n                        this.showNotificationError({msg: 'Activation failed!!', timeout:4000, axisY: 'top', axisX: 'center'})\n                        this.$router.push( {name:'emailVerification'} )\n                    }\n                    break\n\n                case 'resetPassword':                     \n                    // TODO\n                    // this.$store.commit('mostrarOcupado',{\n                    //     titulo: \"Comprobando validacion\",\n                    //     mensaje: \"Estamos comprobando los datos para la validacion del codigo de cambio de contraseña...\"\n                    // })\n                    // try{\n                    //     this.email = await auth.verifyPasswordResetCode(this.oobCode)\n                    //     this.$store.commit('mostrarNotificacionInformacion', \"Ingresa una nueva contraseña para \" + this.email, 4000)      \n\n                    // }catch(error){\n                    //     this.$store.commit('mostrarNotificacionError', \"Validación erronea del codigo de cambio de contraseña, intentelo más tarde.\", 4000)   \n                    // }\n                    // this.$store.commit('ocultarOcupado')\n                    // break\n\n            }\n        },\n    }\n\n}\n",{"version":3,"sources":["actionController.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"actionController.vue","sourceRoot":"src/views/users/actions","sourcesContent":["<template>\n    <div>\n\n    </div>\n</template>\n\n<script>\n    // Firebase \n    import { auth } from '@/firebase'\n\n    // Vuex\n    import { mapActions } from 'vuex'\n\n    export default {\n        data(){\n            return {\n                oobCode: '',    // A unique code used to identify and verify an application.\n            }\n        },\n\n        created(){\n            // Based on => https://firebase.google.com/docs/auth/custom-email-handler\n            this.validate()\n        },\n        methods: {\n            ...mapActions('snackbar', ['showNotificationSuccess', 'showNotificationError']),\n\n            async validate(){\n\n                let mode = this.$route.query.mode\n                this.oobCode = this.$route.query.oobCode\n\n                switch(mode){\n                    case 'verifyEmail':\n\n                        try{\n                            // Validating user.\n                            await auth.applyActionCode(this.oobCode)\n                            await auth.currentUser.reload()\n\n                            this.showNotificationSuccess({msg: 'Activation successful!!', timeout:4000, axisY: 'top', axisX: 'center'})\n                            this.$router.push( {name:'dashboard'} )\n\n                        }catch(error){\n                            this.showNotificationError({msg: 'Activation failed!!', timeout:4000, axisY: 'top', axisX: 'center'})\n                            this.$router.push( {name:'emailVerification'} )\n                        }\n                        break\n\n                    case 'resetPassword':                     \n                        // TODO\n                        // this.$store.commit('mostrarOcupado',{\n                        //     titulo: \"Comprobando validacion\",\n                        //     mensaje: \"Estamos comprobando los datos para la validacion del codigo de cambio de contraseña...\"\n                        // })\n                        // try{\n                        //     this.email = await auth.verifyPasswordResetCode(this.oobCode)\n                        //     this.$store.commit('mostrarNotificacionInformacion', \"Ingresa una nueva contraseña para \" + this.email, 4000)      \n\n                        // }catch(error){\n                        //     this.$store.commit('mostrarNotificacionError', \"Validación erronea del codigo de cambio de contraseña, intentelo más tarde.\", 4000)   \n                        // }\n                        // this.$store.commit('ocultarOcupado')\n                        // break\n\n                }\n            },\n        }\n    \n    }\n</script>"]}]}