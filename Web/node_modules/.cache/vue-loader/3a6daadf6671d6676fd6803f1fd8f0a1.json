{"remainingRequest":"/home/javi/Escritorio/TFG/Web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/javi/Escritorio/TFG/Web/src/views/manageGaraje/usersRequest/UsersRequest-form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/javi/Escritorio/TFG/Web/src/views/manageGaraje/usersRequest/UsersRequest-form.vue","mtime":1579951924210},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n    // Vuex\n    import { mapMutations, mapActions} from 'vuex'    \n\n    export default {\n        props: ['enableAcceptForm', 'enableDenyForm', 'infoToAcceptForm'],\n        data(){\n            return {\n                parkingSpaces: 0\n            }\n        },\n\n        computed:{\n\t\t\t/**\n\t\t\t * Determine if a user is logged in the app.\n\t\t\t */\n\t\t\tuserLogged(){\n\t\t\t\treturn this.$store.state.session.user\n            }\n\n        },\n\n        methods: {\n            ...mapActions('snackbar', ['showNotificationSuccess', 'showNotificationError']),\n\n            disableAcceptForm(acceptUserStatus){\n                this.$emit('disableAcceptForm', acceptUserStatus)\n            },\n\n            disableDenyForm(){\n                this.$emit('disableDenyForm')\n            },\n\n            maxNumberOfParkingSpaces(){\n                return this.infoToAcceptForm.totalParkingSpaces - this.infoToAcceptForm.numberOccupiedParking\n            },\n\n            async acceptUser(){\n                await this.userLogged.acceptUserRequest(this.infoToAcceptForm.uid, this.parkingSpaces).then( () => {\n                    this.showNotificationSuccess({msg: 'User added to your organization.', timeout:4000, axisY: 'top', axisX: 'center'}) \n                    this.disableAcceptForm(true)\n                }).catch( () => {\n                    this.showNotificationError({msg: 'Error during adding user to your organization.', timeout:4000, axisY: 'top', axisX: 'center'}) \n                    this.disableAcceptForm(false)\n                })\n\n            }\n\n\n        }\n        \n    }\n",{"version":3,"sources":["UsersRequest-form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA","file":"UsersRequest-form.vue","sourceRoot":"src/views/manageGaraje/usersRequest","sourcesContent":["<template>\n    <div>\n        <v-dialog v-model=\"enableAcceptForm\" persistent max-width=\"900\" >\n            <v-card >\n                <v-card-title class=\"headline\">Add '{{ infoToAcceptForm.userName }}' to your organization</v-card-title>\n\n                <v-card-text>Parking spaces occupied: {{ infoToAcceptForm.numberOccupiedParking }} of {{ infoToAcceptForm.totalParkingSpaces }} </v-card-text>\n                <v-card-text>How many parking spaces do you want to associate to '{{ infoToAcceptForm.userName }}' ?</v-card-text>\n                <v-slider\n                    class=\"mx-10\"\n                    min=\"1\"\n                    :max=\"maxNumberOfParkingSpaces()\"\n                    v-model=\"parkingSpaces\"\n                    :thumb-size=\"24\"\n                    thumb-label=\"always\"\n                ></v-slider>\n\n\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"red darken-1\" text @click=\"disableAcceptForm\">Cancel</v-btn>                    \n                    <v-btn color=\"green darken-1\" text @click=\"acceptUser\">Finish</v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n\n        <v-dialog v-model=\"enableDenyForm\" persistent max-width=\"600\" >\n            <v-card>\n                <v-card-title class=\"headline\">Do you want to DENY user request ?</v-card-title>\n                <v-card-text>Press 'NO' to cancel. Press 'YES' to deny user request.</v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"red darken-1\" text @click=\"disableDenyForm\">No</v-btn>\n                    <v-btn color=\"green darken-1\" text @click=\"dialog = false\">Yes</v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n    </div>\n    \n</template>\n\n<script>\n\n    // Vuex\n    import { mapMutations, mapActions} from 'vuex'    \n\n    export default {\n        props: ['enableAcceptForm', 'enableDenyForm', 'infoToAcceptForm'],\n        data(){\n            return {\n                parkingSpaces: 0\n            }\n        },\n\n        computed:{\n\t\t\t/**\n\t\t\t * Determine if a user is logged in the app.\n\t\t\t */\n\t\t\tuserLogged(){\n\t\t\t\treturn this.$store.state.session.user\n            }\n\n        },\n\n        methods: {\n            ...mapActions('snackbar', ['showNotificationSuccess', 'showNotificationError']),\n\n            disableAcceptForm(acceptUserStatus){\n                this.$emit('disableAcceptForm', acceptUserStatus)\n            },\n\n            disableDenyForm(){\n                this.$emit('disableDenyForm')\n            },\n\n            maxNumberOfParkingSpaces(){\n                return this.infoToAcceptForm.totalParkingSpaces - this.infoToAcceptForm.numberOccupiedParking\n            },\n\n            async acceptUser(){\n                await this.userLogged.acceptUserRequest(this.infoToAcceptForm.uid, this.parkingSpaces).then( () => {\n                    this.showNotificationSuccess({msg: 'User added to your organization.', timeout:4000, axisY: 'top', axisX: 'center'}) \n                    this.disableAcceptForm(true)\n                }).catch( () => {\n                    this.showNotificationError({msg: 'Error during adding user to your organization.', timeout:4000, axisY: 'top', axisX: 'center'}) \n                    this.disableAcceptForm(false)\n                })\n\n            }\n\n\n        }\n        \n    }\n</script>"]}]}