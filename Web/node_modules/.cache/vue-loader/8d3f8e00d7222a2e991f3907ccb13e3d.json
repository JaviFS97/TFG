{"remainingRequest":"/home/javi/Escritorio/TFG - Web/tfg-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/javi/Escritorio/TFG - Web/tfg-web/src/views/vehicule/Vehicule-form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/javi/Escritorio/TFG - Web/tfg-web/src/views/vehicule/Vehicule-form.vue","mtime":1577300212572},{"path":"/home/javi/Escritorio/TFG - Web/tfg-web/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/javi/Escritorio/TFG - Web/tfg-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/javi/Escritorio/TFG - Web/tfg-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    // Models\n    import Vehicule from '../../models/vehicule/vehicule'\n\n    // Data\n    import types from '../../data/vehicules/types'\n\n    // Vuex\n    import { mapActions } from 'vuex'\n\n    export default {\n        props: ['visibleForm', 'vehiculeToModify'],\n\n        data() {\n            return {\n                typesVehicules: [],\n                modifyingVehicule: false,\n                vehiculeForm: {\n                    plate: '',\n                    name: '',\n                    type: '',\n                    brand: '',\n                    model: '',\n                    height: '',\n                    width: '',\n                    depth: '',\n                }\n            }\n        },\n\n        created() {\n            for (let type of types){\n                this.typesVehicules.push( type.name );\n            }\n\n            console.log(this.vehiculeToModify)\n            if (this.vehiculeToModify){\n                this.vehiculeForm.plate =  this.vehiculeToModify.plate\n                this.vehiculeForm.name =  this.vehiculeToModify.name\n                this.vehiculeForm.type =  this.vehiculeToModify.type\n                this.vehiculeForm.brand =  this.vehiculeToModify.brand\n                this.vehiculeForm.model =  this.vehiculeToModify.model\n                this.vehiculeForm.height =  this.vehiculeToModify.height\n                this.vehiculeForm.width =  this.vehiculeToModify.width\n                this.vehiculeForm.depth =  this.vehiculeToModify.depth\n\n                this.modifyingVehicule = true\n            }\n        },\n\n        computed:{\n\t\t\t/**\n\t\t\t * Determine if a user is logged in the app.\n\t\t\t */\n\t\t\tuserLogged(){\n\t\t\t\treturn this.$store.state.session.user\n            }\n\n        },\n        \n        methods: {\n            ...mapActions('snackbar', ['showNotificationSuccess', 'showNotificationError']),\n            /**\n             * Throw events to parents.\n             */\n            disabledForm(){\n                this.$emit('disabledForm');\n            },\n\n            /**\n             * Throw events to parents.\n             */\n            async saveVehicule(){\n                console.log('save')\n\n                let vehicule = new Vehicule(this.vehiculeForm.plate,\n                                            this.vehiculeForm.name,\n                                            this.vehiculeForm.type,\n                                            this.vehiculeForm.brand,\n                                            this.vehiculeForm.model,\n                                            this.vehiculeForm.height,\n                                            this.vehiculeForm.width,\n                                            this.vehiculeForm.depth)\n\n                await this.userLogged.saveVehicule(vehicule)\n                    .then(res => {\n                        if (this.vehiculeToModify){\n                            this.showNotificationSuccess({msg: 'Vehicule modified', timeout:4000, axisY: 'top', axisX: 'center'})    \n                        }else{\n                            this.showNotificationSuccess({msg: 'Vehicule added', timeout:4000, axisY: 'top', axisX: 'center'})\n                        }\n                        \n                        this.$emit('saveVehicule', vehicule);                        \n                    })\n                    .catch(error => {\n                        this.showNotificationError({msg: 'Vehicule plate already exists', timeout:4000, axisY: 'top', axisX: 'center'})\n                    })\n            },\n\n            \n        }\n\n        \n    }\n",{"version":3,"sources":["Vehicule-form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA","file":"Vehicule-form.vue","sourceRoot":"src/views/vehicule","sourcesContent":["<template>\n\n    <v-dialog \n        v-model=\"visibleForm\" \n        persistent \n        max-width=\"600\">\n            <v-card>\n                <v-container>\n\n                    <v-row justify=\"center\">\n                        <v-card-title v-if=\"modifyingVehicule\" class=\"headline\">\n                            Modify vehicule.\n                        </v-card-title>\n                        <v-card-title v-else class=\"headline\">\n                            Add vehicule.\n                        </v-card-title>\n                    </v-row>\n\n                    <v-row justify=\"center\">\n                        <v-card-text>\n                            <v-container>\n\n                                <v-row>\n                                    <v-col xs=\"12\" >\n                                        <v-text-field\n                                            v-model=\"vehiculeForm.plate\"\n                                            :disabled=\"modifyingVehicule\"\n                                            label=\"License Plate\"\n                                            prepend-inner-icon=\"mdi-boom-gate-up\"\n                                            outlined>\n                                        </v-text-field>\n                                    </v-col>\n                                    <v-col cols=\"6\">\n                                        <v-text-field\n                                            v-model=\"vehiculeForm.name\"\n                                            label=\"Vehicule Name\"\n                                            prepend-inner-icon=\"mdi-format-text\"\n                                            outlined>\n                                        </v-text-field>\n                                    </v-col>\n                                </v-row>\n\n                                <!-- Type -->\n                                <v-row>\n                                    <v-col cols=\"4\">\n                                        <v-select\n                                            v-model=\"vehiculeForm.type\"\n                                            label=\"Type\"\n                                            :items=\"typesVehicules\" \n                                            dense \n                                            outlined\n                                            prepend-inner-icon=\"mdi-train-car\">\n                                        </v-select>\n                                    </v-col>\n                                    <v-col cols=\"4\">\n                                        <v-text-field\n                                            v-model=\"vehiculeForm.brand\"\n                                            label=\"Brand\"\n                                            prepend-inner-icon=\"mdi-car-multiple\"\n                                            outlined>\n                                        </v-text-field>\n                                    </v-col>\n                                    <v-col cols=\"4\">\n                                        <v-text-field\n                                            v-model=\"vehiculeForm.model\"\n                                            label=\"Model\"\n                                            prepend-inner-icon=\"mdi-engine\"\n                                            outlined>\n                                        </v-text-field>\n                                    </v-col>                                                                        \n                                </v-row>\n\n                                <!-- Dimensions -->\n                                <v-row>\n                                    <v-col cols=\"4\">\n                                        <v-text-field\n                                            v-model=\"vehiculeForm.height\"\n                                            label=\"Height\"\n                                            prepend-inner-icon=\"mdi-arrow-collapse-vertical\"\n                                            outlined>\n                                        </v-text-field>\n                                    </v-col>\n                                    <v-col cols=\"4\">\n                                        <v-text-field\n                                            v-model=\"vehiculeForm.width\"\n                                            label=\"Width\"\n                                            prepend-inner-icon=\"mdi-arrow-collapse-horizontal\"\n                                            outlined>\n                                        </v-text-field>\n                                    </v-col>\n                                    <v-col cols=\"4\">\n                                        <v-text-field\n                                            v-model=\"vehiculeForm.depth\"\n                                            label=\"Depth\"\n                                            prepend-inner-icon=\"mdi-arrow-collapse-all\"\n                                            outlined>\n                                        </v-text-field>\n                                    </v-col>                                                                        \n                                </v-row>                            \n                            </v-container>\n                        </v-card-text>\n                    </v-row>\n\n                    <v-row justify=\"center\">\n                        <v-card-actions>\n                        <v-spacer></v-spacer>\n                        <v-btn color=\"red darken-1\" text @click=\"disabledForm\">Close</v-btn>\n                        <v-btn v-if=\"modifyingVehicule\" color=\"blue darken-1\" text @click=\"saveVehicule\">Modify</v-btn>\n                        <v-btn v-else color=\"blue darken-1\" text @click=\"saveVehicule\">Save</v-btn>\n                        </v-card-actions>\n                    </v-row>\n                </v-container>\n                \n            </v-card>\n\n    </v-dialog>\n  \n</template>\n\n<script>\n    // Models\n    import Vehicule from '../../models/vehicule/vehicule'\n\n    // Data\n    import types from '../../data/vehicules/types'\n\n    // Vuex\n    import { mapActions } from 'vuex'\n\n    export default {\n        props: ['visibleForm', 'vehiculeToModify'],\n\n        data() {\n            return {\n                typesVehicules: [],\n                modifyingVehicule: false,\n                vehiculeForm: {\n                    plate: '',\n                    name: '',\n                    type: '',\n                    brand: '',\n                    model: '',\n                    height: '',\n                    width: '',\n                    depth: '',\n                }\n            }\n        },\n\n        created() {\n            for (let type of types){\n                this.typesVehicules.push( type.name );\n            }\n\n            console.log(this.vehiculeToModify)\n            if (this.vehiculeToModify){\n                this.vehiculeForm.plate =  this.vehiculeToModify.plate\n                this.vehiculeForm.name =  this.vehiculeToModify.name\n                this.vehiculeForm.type =  this.vehiculeToModify.type\n                this.vehiculeForm.brand =  this.vehiculeToModify.brand\n                this.vehiculeForm.model =  this.vehiculeToModify.model\n                this.vehiculeForm.height =  this.vehiculeToModify.height\n                this.vehiculeForm.width =  this.vehiculeToModify.width\n                this.vehiculeForm.depth =  this.vehiculeToModify.depth\n\n                this.modifyingVehicule = true\n            }\n        },\n\n        computed:{\n\t\t\t/**\n\t\t\t * Determine if a user is logged in the app.\n\t\t\t */\n\t\t\tuserLogged(){\n\t\t\t\treturn this.$store.state.session.user\n            }\n\n        },\n        \n        methods: {\n            ...mapActions('snackbar', ['showNotificationSuccess', 'showNotificationError']),\n            /**\n             * Throw events to parents.\n             */\n            disabledForm(){\n                this.$emit('disabledForm');\n            },\n\n            /**\n             * Throw events to parents.\n             */\n            async saveVehicule(){\n                console.log('save')\n\n                let vehicule = new Vehicule(this.vehiculeForm.plate,\n                                            this.vehiculeForm.name,\n                                            this.vehiculeForm.type,\n                                            this.vehiculeForm.brand,\n                                            this.vehiculeForm.model,\n                                            this.vehiculeForm.height,\n                                            this.vehiculeForm.width,\n                                            this.vehiculeForm.depth)\n\n                await this.userLogged.saveVehicule(vehicule)\n                    .then(res => {\n                        if (this.vehiculeToModify){\n                            this.showNotificationSuccess({msg: 'Vehicule modified', timeout:4000, axisY: 'top', axisX: 'center'})    \n                        }else{\n                            this.showNotificationSuccess({msg: 'Vehicule added', timeout:4000, axisY: 'top', axisX: 'center'})\n                        }\n                        \n                        this.$emit('saveVehicule', vehicule);                        \n                    })\n                    .catch(error => {\n                        this.showNotificationError({msg: 'Vehicule plate already exists', timeout:4000, axisY: 'top', axisX: 'center'})\n                    })\n            },\n\n            \n        }\n\n        \n    }\n</script>"]}]}