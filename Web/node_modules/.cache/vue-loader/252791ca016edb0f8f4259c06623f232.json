{"remainingRequest":"/home/javi/Escritorio/TFG/Web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/javi/Escritorio/TFG/Web/src/views/garaje/rent/Rent-form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/javi/Escritorio/TFG/Web/src/views/garaje/rent/Rent-form.vue","mtime":1580577813104},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/javi/Escritorio/TFG/Web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n    // Models\n    import rentGarajeSpace from '../../../models/rentGarajeSpace/rentGarajeSpace'\n\n    // Components\n    import MapRents from '../../../components/maps/MapRents'\n\n    export default {\n        components: {MapRents},\n\n        props: ['enableRentForm'],\n\n        data () {\n            return {\n                infoRent: null,\n                dialog: true,\n                loadingListRents: true,\n                rentsList: [],\n                parkingIsSelected: false,\n                loadingsendRentParking: false,\n                step: 1,\n                today: null,\n                form: {\n                    selectedDates: [],\n                    start: null,\n                    end: null,\n                },\n            }\n        },\n\n        created() {\n            this.getAllRentsList()\n        },\n\n        computed:{\n\t\t\t/**\n\t\t\t * Determine if a user is logged in the app.\n\t\t\t */\n\t\t\tuserLogged(){\n\t\t\t\treturn this.$store.state.session.user\n            }\n\n        },\n\n        methods: {\n            disableRentForm() {\n                this.$emit('disableRentForm')\n            },\n\n            async getAllRentsList(){\n                const rentGaraje = new rentGarajeSpace()\n                this.rentsList = await rentGaraje.getAllRent()\n                this.loadingListRents = true\n                await this.sleep(1500)\n                this.loadingListRents = false\n            },   \n\n            selectedParking(rent){\n                this.infoRent = rent\n                this.form.start = rent.startHour\n                this.form.end = rent.endHour\n                this.disableRentForm()\n                this.parkingIsSelected = true\n            },     \n            \n            allowedDates(date) {\n                const [yearDate, monthDate, dayDate] = date.split('-')\n                for (const userDate of this.infoRent.dates){\n                    const [year, month, day] = userDate.split('-')\n                    if(dayDate == day && monthDate == month && yearDate == year){\n                        return true\n                    }                \n                }\n                return false\n            },\n\n            async sendRentParking() {\n                const rentGaraje = new rentGarajeSpace()\n                this.rentsList = await rentGaraje.addRentToparking(this.infoRent.pid, this.infoRent.uidOwner, this.userLogged.uid, this.form.selectedDates, this.form.start, this.form.end, this.infoRent.coordenateLAT, this.infoRent.coordenateLNG)\n                this.loadingsendRentParking = true\n                await this.sleep(1500)\n                this.loadingsendRentParking = false\n                this.parkingIsSelected = false\n            },\n            \n            /** Simulates a response wait from the backend\n             * @param {Number} ms time to sleep.\n             * @return {Promise}\n             */\n            sleep(ms) {\n                return new Promise(resolve => setTimeout(resolve, ms));\n            }\n        }\n    }\n",{"version":3,"sources":["Rent-form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Rent-form.vue","sourceRoot":"src/views/garaje/rent","sourcesContent":["<template>\n    <v-row justify=\"center\">\n        <v-dialog v-model=\"enableRentForm\" persistent max-width=\"900\" >\n            <v-card height=\"700\">\n                <v-row justify=\"center\">\n                    <v-card-title class=\"headline\">SELECT GARAGE TO RENT</v-card-title>\n                </v-row>\n\n                <v-container>\n                    <v-row justify=\"center\">\n                        <v-col cols=\"10\">\n                            <!-- <MapRents :rents=\"rentsList\" @followOIDFromMap=\"followOIDFromMap\" @closeForm=\"disableRentForm\"></MapRents> -->\n                            <MapRents :rents=\"rentsList\" @closeForm=\"disableRentForm\" @selectedParking=\"selectedParking\"></MapRents>\n                        </v-col>\n                    </v-row>\n                </v-container>\n            </v-card>\n        </v-dialog>\n\n        <v-dialog v-model=\"parkingIsSelected\" persistent max-width=\"900\">\n            <v-card height=\"700\">\n                <v-container>\n                    <v-row justify=\"center\">\n                        <v-col cols=\"10\">\n                            <v-stepper v-model=\"step\">\n                                <v-stepper-header>\n                                    <v-stepper-step :complete=\"step > 1\" step=\"1\">Date</v-stepper-step>\n                                    <v-divider></v-divider>\n                                    <v-stepper-step :complete=\"step > 2\" step=\"2\">Start hour</v-stepper-step>\n                                    <v-divider></v-divider>\n                                    <v-stepper-step :complete=\"step > 3\" step=\"3\">End hour</v-stepper-step>\n                                </v-stepper-header>\n\n                                <v-stepper-items>\n                                    <v-stepper-content step=\"1\">\n                                        <v-row justify=\"center\">\n                                            RELLENAR CON INFO De cada color\n                                        </v-row>\n                                        <v-row justify=\"center\">\n                                            <v-date-picker\n                                                v-model=\"form.selectedDates\"\n                                                multiple\n                                                :allowed-dates=\"allowedDates\"\n                                                :min=\"today\"\n                                            ></v-date-picker>\n                                        </v-row>\n                                        <v-row justify=\"center\" class=\"mt-6\">\n                                            <v-btn @click=\"step += 1\" color=\"primary\" :disabled=\"form.selectedDates.length == 0\"> Next </v-btn>\n                                        </v-row>\n                                    </v-stepper-content>\n\n                                    <v-stepper-content step=\"2\">\n                                        <v-row justify=\"center\">\n                                            <h2>Start:</h2>\n                                        </v-row>\n                                        <v-row justify=\"center\">\n                                            <v-time-picker v-model=\"form.start\" landscape :min=\"form.start\" :max=\"form.end\" format=\"24hr\" ></v-time-picker>\n                                        </v-row>\n                                        <v-row justify=\"center\" class=\"mt-6\">\n                                            <v-btn @click=\"step -= 1\" color=\"primary\" class=\"mr-6\"> Before </v-btn>\n                                            <v-btn @click=\"step += 1\" color=\"primary\" :disabled=\"!form.start\"> Next </v-btn>\n                                        </v-row>\n                                    </v-stepper-content>\n                                    <v-stepper-content step=\"3\">\n                                        <v-row justify=\"center\">\n                                            <h2>End:</h2>\n                                        </v-row>\n                                        <v-row justify=\"center\">\n                                            <v-time-picker v-model=\"form.end\" landscape :min=\"form.start\" :max=\"form.end\" format=\"24hr\"></v-time-picker>                                            \n                                        </v-row>\n                                        <v-row justify=\"center\" class=\"mt-6\">\n                                            <v-btn @click=\"step -= 1\" color=\"primary\" class=\"mr-6\"> Before </v-btn>\n                                            <v-btn @click=\"sendRentParking\" color=\"primary\" :disabled=\"!form.end\" :loading=\"loadingsendRentParking\"> Send </v-btn>\n                                        </v-row>\n                                    </v-stepper-content>   \n\n                                </v-stepper-items>\n                            </v-stepper>\n                        </v-col>\n                    </v-row>\n                </v-container>                \n            </v-card>\n        </v-dialog>\n    </v-row>\n</template>\n\n<script>\n\n    // Models\n    import rentGarajeSpace from '../../../models/rentGarajeSpace/rentGarajeSpace'\n\n    // Components\n    import MapRents from '../../../components/maps/MapRents'\n\n    export default {\n        components: {MapRents},\n\n        props: ['enableRentForm'],\n\n        data () {\n            return {\n                infoRent: null,\n                dialog: true,\n                loadingListRents: true,\n                rentsList: [],\n                parkingIsSelected: false,\n                loadingsendRentParking: false,\n                step: 1,\n                today: null,\n                form: {\n                    selectedDates: [],\n                    start: null,\n                    end: null,\n                },\n            }\n        },\n\n        created() {\n            this.getAllRentsList()\n        },\n\n        computed:{\n\t\t\t/**\n\t\t\t * Determine if a user is logged in the app.\n\t\t\t */\n\t\t\tuserLogged(){\n\t\t\t\treturn this.$store.state.session.user\n            }\n\n        },\n\n        methods: {\n            disableRentForm() {\n                this.$emit('disableRentForm')\n            },\n\n            async getAllRentsList(){\n                const rentGaraje = new rentGarajeSpace()\n                this.rentsList = await rentGaraje.getAllRent()\n                this.loadingListRents = true\n                await this.sleep(1500)\n                this.loadingListRents = false\n            },   \n\n            selectedParking(rent){\n                this.infoRent = rent\n                this.form.start = rent.startHour\n                this.form.end = rent.endHour\n                this.disableRentForm()\n                this.parkingIsSelected = true\n            },     \n            \n            allowedDates(date) {\n                const [yearDate, monthDate, dayDate] = date.split('-')\n                for (const userDate of this.infoRent.dates){\n                    const [year, month, day] = userDate.split('-')\n                    if(dayDate == day && monthDate == month && yearDate == year){\n                        return true\n                    }                \n                }\n                return false\n            },\n\n            async sendRentParking() {\n                const rentGaraje = new rentGarajeSpace()\n                this.rentsList = await rentGaraje.addRentToparking(this.infoRent.pid, this.infoRent.uidOwner, this.userLogged.uid, this.form.selectedDates, this.form.start, this.form.end, this.infoRent.coordenateLAT, this.infoRent.coordenateLNG)\n                this.loadingsendRentParking = true\n                await this.sleep(1500)\n                this.loadingsendRentParking = false\n                this.parkingIsSelected = false\n            },\n            \n            /** Simulates a response wait from the backend\n             * @param {Number} ms time to sleep.\n             * @return {Promise}\n             */\n            sleep(ms) {\n                return new Promise(resolve => setTimeout(resolve, ms));\n            }\n        }\n    }\n</script>"]}]}