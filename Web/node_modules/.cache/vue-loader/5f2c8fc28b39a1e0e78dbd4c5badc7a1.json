{"remainingRequest":"/home/javi/Escritorio/TFG - Web/tfg-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/javi/Escritorio/TFG - Web/tfg-web/src/views/garaje/organization/Organization-info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/javi/Escritorio/TFG - Web/tfg-web/src/views/garaje/organization/Organization-info.vue","mtime":1580749920820},{"path":"/home/javi/Escritorio/TFG - Web/tfg-web/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/javi/Escritorio/TFG - Web/tfg-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/javi/Escritorio/TFG - Web/tfg-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n// Components\nimport MapGaraje from '../../../components/maps/MapGaraje'\nimport OrganizationRent from \"./Organization-rent\"\n\n// Models\nimport OrganizationUser from '../../../models/user/organizationUser'\n\nexport default {\n    props: ['selectedOrganization'],  \n\n    components: {MapGaraje, OrganizationRent},\n\n    data() {\n        return {\n            organization: {},\n            isLoading: true,\n        }\n    },\n\n    async created() {\n        await this.getOrganizationInfo()\n        this.sleep(2000).then(() => { this.isLoading = false })\n        \n    },\n\n    methods: {\n\n        async getOrganizationInfo(){\n            let instanceOrg = new OrganizationUser({\n                email: undefined,\n                password: undefined,\n                name: undefined,\n                parkingSpaces: undefined,\n                coordenates: undefined,\n            })\n            await instanceOrg.getOrganizationByOID(this.selectedOrganization.oid).then( orgByOID => {\n\n                let org = {}\n                org.name = orgByOID.organizationName\n                org.coordenates = [orgByOID.coordenateLNG, orgByOID.coordenateLAT]\n                return org\n            }).then( org => {\n                this.organization = org\n                \n            })\n\n        },      \n\n        /** Simulates a response wait from the backend\n         * @param {Number} ms time to sleep.\n         * @return {Promise}\n         */\n        sleep(ms) {\n            return new Promise(resolve => setTimeout(resolve, ms));\n        }            \n\n    }\n}\n",{"version":3,"sources":["Organization-info.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Organization-info.vue","sourceRoot":"src/views/garaje/organization","sourcesContent":["v-<template>\n    <v-tabs fixed-tabs class=\"mt-2\"> \n        <v-tab>\n            <v-icon left>mdi-account</v-icon>\n            INFO\n        </v-tab>\n        <v-tab>\n            <v-icon left>mdi-timetable</v-icon>\n            RENT YOUR GARAJE\n        </v-tab>\n        <v-tab-item>\n            <v-card flat>\n                <v-row v-if='isLoading' justify=\"center\" class=\"mt-10\"> \n                    <v-progress-circular\n                        :size=\"75\"\n                        color=\"primary\"\n                        indeterminate>\n                    </v-progress-circular>\n                </v-row>      \n                <v-card-text v-else>\n                    <ul class=\"mt-5\">\n                        <li> <b>Name of garaje:</b> {{selectedOrganization.title}} </li>\n                        <li> <b>Belongs to</b> {{organization.name}} <b>organization</b> </li>\n                        <li> <b>Coordenates: </b> </li>\n                    </ul>\n\n                    <MapGaraje :organization=\"organization\"></MapGaraje>\n\n                </v-card-text>\n            </v-card>\n        </v-tab-item>\n        <v-tab-item>\n            <OrganizationRent :selectedOrganization=\"selectedOrganization\"></OrganizationRent>\n        </v-tab-item>\n    </v-tabs>        \n\n</template>\n\n\n<script>\n\n    // Components\n    import MapGaraje from '../../../components/maps/MapGaraje'\n    import OrganizationRent from \"./Organization-rent\"\n\n    // Models\n    import OrganizationUser from '../../../models/user/organizationUser'\n\n    export default {\n        props: ['selectedOrganization'],  \n\n        components: {MapGaraje, OrganizationRent},\n\n        data() {\n            return {\n                organization: {},\n                isLoading: true,\n            }\n        },\n\n        async created() {\n            await this.getOrganizationInfo()\n            this.sleep(2000).then(() => { this.isLoading = false })\n            \n        },\n\n        methods: {\n\n            async getOrganizationInfo(){\n                let instanceOrg = new OrganizationUser({\n                    email: undefined,\n                    password: undefined,\n                    name: undefined,\n                    parkingSpaces: undefined,\n                    coordenates: undefined,\n                })\n                await instanceOrg.getOrganizationByOID(this.selectedOrganization.oid).then( orgByOID => {\n\n                    let org = {}\n                    org.name = orgByOID.organizationName\n                    org.coordenates = [orgByOID.coordenateLNG, orgByOID.coordenateLAT]\n                    return org\n                }).then( org => {\n                    this.organization = org\n                    \n                })\n  \n            },      \n\n            /** Simulates a response wait from the backend\n             * @param {Number} ms time to sleep.\n             * @return {Promise}\n             */\n            sleep(ms) {\n                return new Promise(resolve => setTimeout(resolve, ms));\n            }            \n\n        }\n    }\n</script>"]}]}